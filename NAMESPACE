# Generated by roxygen2: do not edit by hand

S3method(print,combinedMultiHMM)
S3method(print,multiHMM)
S3method(print,uniHMM)
export(Chromstar)
export(bin2dec)
export(binReads)
export(callPeaksMultivariate)
export(callPeaksReplicates)
export(callPeaksUnivariate)
export(changeFDR)
export(changePostCutoff)
export(collapseBins)
export(combineMultivariates)
export(dec2bin)
export(exportCombinations)
export(exportCounts)
export(exportGRangesAsBedFile)
export(exportPeaks)
export(fixedWidthBins)
export(genomicFrequencies)
export(getCombinations)
export(getDistinctColors)
export(getStateColors)
export(heatmapCombinations)
export(heatmapCountCorrelation)
export(heatmapTransitionProbs)
export(loadHmmsFromFiles)
export(plotEnrichCountHeatmap)
export(plotEnrichment)
export(plotExpression)
export(plotFoldEnrichHeatmap)
export(plotHistogram)
export(readBamFileAsGRanges)
export(readBedFileAsGRanges)
export(readCustomBedFile)
export(removeCondition)
export(stateBrewer)
export(transitionFrequencies)
export(unis2pseudomulti)
export(variableWidthBins)
import(GenomeInfoDb)
import(GenomicRanges)
import(IRanges)
import(chromstaRData)
import(doParallel)
import(foreach)
import(ggplot2)
importFrom(GenomicAlignments,first)
importFrom(GenomicAlignments,readGAlignmentPairs)
importFrom(GenomicAlignments,readGAlignments)
importFrom(IRanges,subsetByOverlaps)
importFrom(Rsamtools,BamFile)
importFrom(Rsamtools,ScanBamParam)
importFrom(Rsamtools,indexBam)
importFrom(Rsamtools,scanBamFlag)
importFrom(S4Vectors,Rle)
importFrom(S4Vectors,as.factor)
importFrom(S4Vectors,queryHits)
importFrom(S4Vectors,runmean)
importFrom(S4Vectors,subjectHits)
importFrom(bamsignals,bamCount)
importFrom(grDevices,col2rgb)
importFrom(grDevices,rgb2hsv)
importFrom(graphics,hist)
importFrom(methods,as)
importFrom(methods,is)
importFrom(mvtnorm,rmvnorm)
importFrom(reshape2,melt)
importFrom(stats,aggregate)
importFrom(stats,cutree)
importFrom(stats,dist)
importFrom(stats,dnbinom)
importFrom(stats,dnorm)
importFrom(stats,hclust)
importFrom(stats,pnbinom)
importFrom(stats,qnorm)
importFrom(stats,rbinom)
importFrom(stats,rnbinom)
importFrom(stats,runif)
importFrom(stats,stepfun)
importFrom(utils,read.table)
importFrom(utils,write.table)
useDynLib(chromstaR, .registration = TRUE, .fixes = "")
