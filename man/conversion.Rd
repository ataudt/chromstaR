% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dec2bin.R
\name{conversion}
\alias{bin2dec}
\alias{conversion}
\alias{dec2bin}
\title{Conversion of decimal and binary states}
\usage{
dec2bin(dec, colnames = NULL, ndigits = NULL)

bin2dec(bin)
}
\arguments{
\item{dec}{A vector with whole numbers.}

\item{colnames}{The column names for the returned matrix. If specified, \code{ndigits} will be the length of \code{colnames}.}

\item{ndigits}{The number of digits that the binary representation should have. If unspecified, the shortest possible representation will be chosen.}

\item{bin}{A matrix with only 0 and 1 (or TRUE and FALSE) as entries. One combinatorial state per row.}
}
\value{
A vector of integers for \code{bin2dec} and a matrix of logicals with one state per row for \code{dec2bin}.
}
\description{
Convert combinatorial states in decimal representation to combinatorial states in binary representation and vice versa.
}
\details{
\pkg{\link{chromstaR}} uses decimal numbers to represent combinatorial states of peaks. These functions serve as a convenient way to get from the efficient decimal representation to a more human-readable binary representation.
}
\section{Functions}{
\itemize{
\item \code{dec2bin}: Decimal to binary conversion.

\item \code{bin2dec}: Binary to decimal conversion.
}}
\examples{
decimal.states <- c(0:31)
binary.states <- dec2bin(decimal.states, colnames=paste0('mark',1:5))
control.decimal.states <- bin2dec(binary.states)
}
\author{
Aaron Taudt
}

