\name{combinatorialStates}
\alias{combinatorialStates}
\title{
Get the (decimal) combinatorial states of a list of univariate HMM models
}
\description{
Get the combinatorial states of a list of models generated by \code{\link{callPeaksUnivariate}}. The function returns the decimal combinatorial states for each bin (see details for an explanation of combinatorial state).
}
\usage{
combinatorialStates(hmm.list, binary=FALSE)
}
\arguments{
\item{hmm.list}{
A list of models generated by \code{\link{callPeaksUnivariate}}, e.g. 'list(model1,model2,...)'.
}
\item{binary}{If TRUE, a matrix of binary instead of decimal states will be returned.}
}

\details{
For a given model, each genomic bin can be either called 'unmodified' or 'modified', depending on the posterior probabilities estimated by the Baum-Welch. Thus, a list of models defines a binary combinatorial state for each bin. This binary combinatorial state can be expressed as a decimal number.

Example: We have 4 histone modifications, and we run the univariate HMM for each of them. Then we use a false discovery rate of 0.5 to call each bin either 'unmodified' or 'modified'. The resulting binary combinatorial states can then be converted to decimal representation. The following table illustrates this:

\tabular{crrrrr}{
bin \tab modification state \tab \tab \tab \tab decimal state\cr
    \tab model1 \tab model2 \tab model3 \tab model4 \tab     \cr
1   \tab      0 \tab      0 \tab      1 \tab      0 \tab 2   \cr
2   \tab      0 \tab      0 \tab      0 \tab      0 \tab 0   \cr
3   \tab      0 \tab      1 \tab      1 \tab      0 \tab 6   \cr
4   \tab      0 \tab      1 \tab      1 \tab      1 \tab 7   \cr
}
}
\value{
Output is a vector of integers representing the combinatorial state of each bin.
}
\keyword{combinatorial}
\keyword{decimal}
\keyword{binary}
\author{Aaron Taudt}
\examples{
## Get example BED-files with ChIP-seq reads for H3K36me3 in 7 different brain tissues (chr22)
bedfiles <- list.files(system.file(file.path("extdata","brain"), package="chromstaR"), full=T)
## Bin the data into bin size 800bp and build the univariate Hidden Markov Model (HMM)
uni.HMMs <- list()
for (bedfile in bedfiles) {
  binned.data <- bed2binned(bedfile, assembly='hg19', binsize=800, save.as.RData=F)
  uni.HMMs[[bedfile]] <- callPeaksUnivariate(binned.data, ID=basename(bedfile), max.time=30, eps=0.01)
}
## Get the decimal representation of the combinatorial state of this combination of models
states <- combinatorialStates(uni.HMMs, binary=FALSE)
## Show number of each state
table(states)
}
