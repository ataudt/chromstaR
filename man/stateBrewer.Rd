% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stateBrewer.R
\name{stateBrewer}
\alias{stateBrewer}
\title{Obtain combinatorial states from experiment table}
\usage{
stateBrewer(experiment.table, mode, differential.states = FALSE,
  common.states = FALSE)
}
\arguments{
\item{mode}{Mode of brewing. See \code{\link{Chromstar}} for a description of the parameter.}

\item{differential.states}{A logical specifying whether differential states shall be returned.}

\item{common.states}{A logical specifying whether common states shall be returned.}
}
\value{
A data.frame with combinations and their corresponding (decimal) combinatorial states.
}
\description{
This function computes combinatorial states from an \code{\link{experiment.table}}.
}
\details{
The binary modification state (unmodified=0 or modified=1) of multiple ChIP-seq samples defines a (decimal) combinatorial state such as:
\tabular{ccccccc}{
 \tab sample1 \tab sample2 \tab sample3 \tab sample4 \tab sample5 \tab combinatorial state \cr
bin1 \tab 0 \tab 0 \tab 1 \tab 0 \tab 0 \tab 4 \cr
bin2 \tab 0 \tab 0 \tab 0 \tab 0 \tab 0 \tab 0 \cr
bin3 \tab 0 \tab 1 \tab 0 \tab 1 \tab 0 \tab 10 \cr
bin4 \tab 0 \tab 1 \tab 1 \tab 1 \tab 1 \tab 15 \cr
bin5 \tab 0 \tab 0 \tab 1 \tab 0 \tab 1 \tab 5 \cr
}
}
\examples{
## Construct an experiment table
data(experiment_table)
print(experiment_table)
## Construct combinatorial states
stateBrewer(experiment_table, mode='mark')
stateBrewer(experiment_table, mode='condition')
stateBrewer(experiment_table, mode='full', common.states=TRUE)

}
\author{
Aaron Taudt
}

